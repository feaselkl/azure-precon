{
	"name": "S007 - Create Health Inspection DB",
	"properties": {
		"content": {
			"query": "IF DB_ID('HealthInspection') IS NULL\nBEGIN\n    CREATE DATABASE HealthInspection\nEND\nGO\n\nUSE HealthInspection\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'synapse_azdatapreconstoredev_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [synapse_azdatapreconstoredev_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://synapse@azdatapreconstoredev.dfs.core.windows.net' \n\t)\nGO\n\nIF NOT EXISTS(SELECT * FROM sys.external_tables WHERE name = 'DimRestaurant')\n\tCREATE EXTERNAL TABLE dbo.DimRestaurant (\n\t\t[HSISID] bigint,\n\t\t[NAME] nvarchar(4000),\n\t\t[ADDRESS1] nvarchar(200),\n\t\t[ADDRESS2] nvarchar(200),\n\t\t[CITY] nvarchar(75),\n\t\t[STATE] nvarchar(20),\n\t\t[POSTALCODE] nvarchar(20),\n\t\t[PHONENUMBER] nvarchar(50),\n\t\t[RESTAURANTOPENDATE] date,\n\t\t[FACILITYTYPE] nvarchar(50),\n\t\t[PERMITID] int,\n\t\t[X] real,\n\t\t[Y] real,\n\t\t[GEOCODESTATUS] nvarchar(4000)\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'wakeinspections/refined/restaurants/**',\n\t\tDATA_SOURCE = [synapse_azdatapreconstoredev_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF NOT EXISTS(SELECT * FROM sys.external_tables WHERE name = 'DimViolationCode')\n\tCREATE EXTERNAL TABLE dbo.DimViolationCode (\n\t\t[VIOLATIONKEY] nvarchar(200),\n\t\t[STATECODE] nvarchar(75),\n\t\t[QUESTIONNO] nvarchar(4),\n\t\t[VIOLATIONCODE] nvarchar(125),\n\t\t[SHORTDESC] nvarchar(300),\n\t\t[CDCDATAITEM] nvarchar(500)\n\t\t)\n\t\tWITH (\n\t\tLOCATION = 'wakeinspections/refined/violation_codes/**',\n\t\tDATA_SOURCE = [synapse_azdatapreconstoredev_dfs_core_windows_net],\n\t\tFILE_FORMAT = [SynapseParquetFormat]\n\t\t)\nGO\n\nIF NOT EXISTS(SELECT * FROM sys.external_tables WHERE name = 'DimInspector')\n    CREATE EXTERNAL TABLE dbo.DimInspector WITH (\n        LOCATION = 'wakeinspections/refined/inspector/',\n        DATA_SOURCE = [synapse_azdatapreconstoredev_dfs_core_windows_net],\n        FILE_FORMAT = [SynapseParquetFormat]\n    ) AS\n    SELECT\n        ROW_NUMBER() OVER (ORDER BY i.Inspector) AS InspectorKey,\n        i.Inspector\n    FROM (SELECT DISTINCT\n            t.Inspector\n        FROM OPENROWSET(\n            BULK 'wakeinspections/refined/inspections/Year=*/Month=*/*.parquet',\n            DATA_SOURCE = 'synapse_azdatapreconstoredev_dfs_core_windows_net',\n            FORMAT='PARQUET'\n        ) AS t) i;\nGO\n\nIF NOT EXISTS(SELECT * FROM sys.external_tables WHERE name = 'FactInspection')\n    CREATE EXTERNAL TABLE dbo.FactInspection WITH (\n        LOCATION = 'wakeinspections/refined/fact_inspection/',\n        DATA_SOURCE = [synapse_azdatapreconstoredev_dfs_core_windows_net],\n        FILE_FORMAT = [SynapseParquetFormat]\n    ) AS\n    SELECT\n        [InspectionKey],\n        [HSISID],\n        [InspectionDate],\n        [InspectorKey],\n\t\t[Score],\n\t\t[Type]\n    FROM OPENROWSET(\n        BULK 'wakeinspections/refined/inspections/Year=*/Month=*/*.parquet',\n        DATA_SOURCE = 'synapse_azdatapreconstoredev_dfs_core_windows_net',\n        FORMAT='PARQUET') AS t\n        INNER JOIN dbo.DimInspector AS i\n            ON t.Inspector = i.Inspector;\nGO\n\nIF NOT EXISTS(SELECT * FROM sys.external_tables WHERE name = 'DimViolationType')\n    CREATE EXTERNAL TABLE dbo.DimViolationType WITH (\n        LOCATION = 'wakeinspections/refined/violationtype/',\n        DATA_SOURCE = [synapse_azdatapreconstoredev_dfs_core_windows_net],\n        FILE_FORMAT = [SynapseParquetFormat]\n    ) AS\nSELECT\n    ROW_NUMBER() OVER (ORDER BY Category, Critical, Severity, ObservationType, ViolationType) AS ViolationTypeKey,\n        Category,\n        Critical,\n        Severity,\n        ObservationType,\n        ViolationType\nFROM (\n    SELECT DISTINCT\n        Category,\n        Critical,\n        Severity,\n        ObservationType,\n        ViolationType\n    FROM OPENROWSET(\n            BULK 'wakeinspections/refined/inspection_violations/**',\n            DATA_SOURCE = 'synapse_azdatapreconstoredev_dfs_core_windows_net',\n            FORMAT='PARQUET') AS t) AS v;\nGO\n\nIF NOT EXISTS(SELECT * FROM sys.external_tables WHERE name = 'FactViolation')\n    CREATE EXTERNAL TABLE dbo.FactViolation WITH (\n        LOCATION = 'wakeinspections/refined/fact_violation/',\n        DATA_SOURCE = [synapse_azdatapreconstoredev_dfs_core_windows_net],\n        FILE_FORMAT = [SynapseParquetFormat]\n    ) AS\n    SELECT\n        t.[InspectionKey],\n        t.[ViolationKey] AS ViolationCodeKey,\n        vt.ViolationTypeKey,\n        t.[HSISID],\n        t.[InspectionDate],\n        i.[InspectorKey],\n        t.PointValue,\n        t.Comments\n    FROM OPENROWSET(\n        BULK 'wakeinspections/refined/inspection_violations/**',\n        DATA_SOURCE = 'synapse_azdatapreconstoredev_dfs_core_windows_net',\n        FORMAT='PARQUET') AS t\n        INNER JOIN dbo.FactInspection AS i\n            ON t.InspectionKey = i.InspectionKey\n        INNER JOIN dbo.DimViolationType vt\n            ON vt.Category = t.Category\n            AND ISNULL(vt.Critical, '') = ISNULL(t.Critical, '')\n            AND ISNULL(vt.Severity, '') = ISNULL(t.Severity, '')\n            AND ISNULL(vt.ObservationType, '') = ISNULL(t.ObservationType, '')\n            AND ISNULL(vt.ViolationType, '') = ISNULL(t.ViolationType, '');\nGO\n\nIF NOT EXISTS(SELECT * FROM sys.external_tables WHERE name = 'DimDate')\n    CREATE EXTERNAL TABLE dbo.DimDate WITH (\n        LOCATION = 'wakeinspections/refined/date/',\n        DATA_SOURCE = [synapse_azdatapreconstoredev_dfs_core_windows_net],\n        FILE_FORMAT = [SynapseParquetFormat]\n    ) AS\n    SELECT\n        CAST([Date] AS DATE) AS [Date],\n        [Day],\n        [DayOfWeek],\n        [DayName],\n        [IsWeekend],\n        [DayOfWeekInMonth],\n        [CalendarDayOfYear] AS DayOfYear,\n        [WeekOfMonth],\n        [CalendarWeekOfYear] AS WeekOfYear,\n        [CalendarMonth] AS [Month],\n        [MonthName],\n        [CalendarQuarter] AS Quarter,\n        [CalendarQuarterName] AS QuarterName,\n        CalendarYear AS [Year],\n        CAST(FirstDayOfMonth AS DATE) AS FirstDayOfMonth,\n        CAST(LastDayOfMonth AS DATE) AS LastDayOfMonth,\n        CAST(FirstDayOfWeek AS DATE) AS FirstDayOfWeek,\n        CAST(LastDayOfWeek AS DATE) AS LastDayOfWeek,\n        CAST(FirstDayOfQuarter AS DATE) AS FirstDayOfQuarter,\n        CAST(LastDayOfQuarter AS DATE) AS LastDayOfQuarter\n    FROM OPENROWSET(\n        BULK 'wakeinspections/raw/date/**',\n        DATA_SOURCE = 'synapse_azdatapreconstoredev_dfs_core_windows_net',\n        FORMAT='CSV',\n        PARSER_VERSION = '2.0',\n        FIELDTERMINATOR = ',',\n        HEADER_ROW = TRUE)\n        WITH (\n            DateKey INT,\n            [Date] NVARCHAR(30),\n            [Day] INT,\n            DayOfWeek INT,\n            DayName NVARCHAR(20),\n            IsWeekend BIT,\n            DayOfWeekInMonth INT,\n            CalendarDayOfYear INT,\n            WeekOfMonth INT,\n            CalendarWeekOfYear INT,\n            CalendarMonth INT,\n            MonthName NVARCHAR(20),\n            CalendarQuarter INT,\n            CalendarQuarterName NCHAR(2),\n            CalendarYear INT,\n            FirstDayOfMonth NVARCHAR(30),\n            LastDayOfMonth NVARCHAR(30),\n            FirstDayOfWeek NVARCHAR(30),\n            LastDayOfWeek NVARCHAR(30),\n            FirstDayOfQuarter NVARCHAR(30),\n            LastDayOfQuarter NVARCHAR(30),\n            CalendarFirstDayOfYear NVARCHAR(30),\n            CalendarLastDayOfYear NVARCHAR(30),\n            FirstDayOfNextMonth NVARCHAR(30),\n            CalendarFirstDayOfNextYear NVARCHAR(30)\n        ) AS t;\nGO\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "HealthInspection",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}